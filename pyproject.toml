[tool.poetry]
name = "wave"
version = "0.0.1"
description = "Wireless Automation via Engagement"
license = "GPLv3"
readme = "README.md"
authors = [
    "Raziel Kretschmer <s4005251@edu.dhsn.de>",
    "Alexander Jahn <s4005236@edu.dhsn.de>",
    "Maximilian Unger <s4005395@edu.dhsn.de>",
    "Jaden Dustin Kowarsch <s4005362@edu.dhsn.de>"
]

[tool.poetry.dependencies]
# global dependencies
python = ">=3.11,<3.12"
pyyaml = "^6.0.3"
wheel = "^0.45.1"
setuptools = "^80.9.0"
fastapi = "^0.120.1"
uvicorn = "^0.38.0"
opencv-python = "<4.10"
numpy = "<2"
tflite-runtime = {version = "^2.14.0", markers = "sys_platform == 'linux'"}
picamera2 = {version = "^0.3.31", markers = "sys_platform == 'linux'"}

[tool.poetry.group.dev.dependencies]
# development dependencies
pylint = "^3.3.7"
pre-commit = "^4.2.0"
black = "^25.1.0"
isort = "^6.0.1"
tomlkit = "^0.13.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#black config
[tool.black]
line_length = 79                    # pep8 compliant
target-version = ['py311']          # targets Python Version 3.11
include = '\.pyi?$'                 # includes .py- and .pyi- files
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''                                 # standard excludes

#isort config
[tool.isort]
profile = "black"                   # applies standard black config 
line_length = 79                    # pep8 compliant
py_version = 311                    # targets Python Version 3.11
